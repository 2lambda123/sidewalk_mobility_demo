<?xml version="1.0"?>
<launch>

    <!-- Launch file arguments -->
    <arg name="nats"            default="true"/>
    <arg name="location"        default="sml"/>
    <arg name="vehicle_name"    default="svea2"/>
    <arg name="name"            default="remote_driving"/>

    <!-- Start map server -->
    <node if="$(eval location == 'sml')" name="map_server" pkg="map_server" type="map_server" args="$(find svea_core)/maps/sml.yaml" output="screen"/>

    <!-- Start NATS -->
    <node if="$(arg nats)" name="nats_connector" pkg="nats_ros_connector" type="nats_connector.py" output="screen">
        <remap from="$(arg vehicle_name)/remote/ctrl_request" to="lli/ctrl_request"/>
        <remap from="$(arg vehicle_name)/remote/path" to="path"/>
        <rosparam subst_value="true">
            host: sml-wan.asuscomm.com
            subscribers:
              - $(arg vehicle_name)/state
            publishers:
              - $(arg vehicle_name)/remote/ctrl_request
              - $(arg vehicle_name)/remote/path
        </rosparam>
    </node>

    <!-- Motion Capture System -->
    <group if="$(eval location == 'sml')">
        <arg name="mocap_address" value="10.0.0.10"/>
        <arg name="mocap_name"    value="$(arg vehicle_name)"/>

        <include file="$(find svea_mocap)/launch/map_correction.launch">
            <arg name="map" value="sml"/>
        </include>

        <!-- Static Transforms-->
        <include file="$(find svea_sensors)/launch/transforms.launch"/>
        <node name="tf_odom_to_base_link" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 odom base_link 100" />
        <node name="tf_map_to_odom" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 map odom 100" />
    </group>

    <!-- Logitech G29 controller input -->
    <node pkg="joy" type="joy_node" name="joy">
        <param name="coalesce_interval" type="double" value="0.02"/>
        <param name="default_trig_val" value="true"/>
        <param name="deadzone" value="0.0"/>
    </node>

    <!-- Logitech G29 controller force-feedback -->
    <rosparam command="load" file="$(find aug_demo)/params/g29.yaml"/>
    <node name="g29_force_feedback" pkg="ros_g29_force_feedback" type="ros_g29_force_feedback_node"/>

    <!-- Start pure_pursuit -->
    <node name="remote_driving" pkg="aug_demo" type="remote_driving.py" output="screen">
        <rosparam subst_value="true">
            name: $(arg name)
            vehicle_name: $(arg vehicle_name)
            location: $(arg location)
        </rosparam>
    </node>

</launch>
