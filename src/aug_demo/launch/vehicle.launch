<?xml version="1.0"?>
<launch>

    <!-- Launch file arguments -->
    <arg name="location" default="kip"/>

    <arg name="name"    default="svea2"/>
    <arg name="x0"      default="+1.0"/>
    <arg name="y0"      default="-2.0"/>
    <arg name="a0"      default="0.00" /> <!-- wrt to map-->

    <!-- Start map server -->
    <arg name="map"         value="sml"/>
    <node name="map_server" pkg="map_server" type="map_server" args="$(find svea_core)/maps/$(arg map).yaml" output="screen"/>

    <!-- Start low-level interface -->
    <node name="serial_node" pkg="rosserial_python" type="serial_node.py">
        <param name="port" value="/dev/ttyACM0"/>
        <param name="baud" value="250000"/>
    </node>
    
    <!-- Start localization -->
    <include if="$(eval location == 'kip')" file="$(find svea_sensors)/launch/localize.launch">
        <arg name="is_indoors"    value="false" />
        <arg name="initial_pose_x" value="$(arg x0)" />
        <arg name="initial_pose_y" value="$(arg y0)" />
        <arg name="initial_pose_a" value="$(arg a0)" />
    </include>

    <group if="$(eval location == 'sml')">
        <arg name="mocap_address" value="10.0.0.10"/>
        <arg name="mocap_name"    value="$(arg name)"/>

        <include file="$(find mocap_qualisys)/launch/qualisys.launch">
            <arg name="server_address" value="$(arg mocap_address)"/>
        </include>

        <include file="$(find svea_mocap)/launch/map_correction.launch">
            <arg name="map" value="$(arg map)"/>
        </include>
    </group>
    
    <!-- Run the costmap node -->
    <node name="costmap_node" pkg="costmap_2d" type="costmap_2d_node">
        <rosparam file="$(find svea_social_navigation)/config/costmap_params_svea.yaml" command="load" ns="costmap"/>
    </node>

    <!-- Start NATS -->
    <node name="nats_connector" pkg="nats_ros_connector" type="nats_connector.py" output="screen">
        <remap to="vis_pose" from="vehicle/pose"/>
        <remap to="path" from="vehicle/path"/>
        <rosparam subst_value="true">
        host: sml-wan.asuscomm.com
        subscribers:
          - sensor/objects
          - joy
        publishers:
          - vehicle/path
          - vehicle/pose
        </rosparam>
    </node>

    <!-- Static Unmapped Obstacle Simulator -->
    <node name="static_unmapped_obstacle_simulator" pkg="svea_social_navigation" type="static_unmapped_obstacle_simulator.py"/>

    <!-- Start pure_pursuit -->
    <node name="vehicle" pkg="aug_demo" type="vehicle.py" output="screen">
        <rosparam subst_value="true">
        name: $(arg name)
        </rosparam>
    </node>

</launch>
