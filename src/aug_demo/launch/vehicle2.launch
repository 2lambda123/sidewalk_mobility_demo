<?xml version="1.0"?>
<launch>

    <!-- Launch file arguments -->
    <arg name="location"    default="kip"/>

    <arg name="nats"        default="false"/>

    <arg name="name"        default="svea2"/>
    <arg name="x0"          default="+1.0"/>
    <arg name="y0"          default="-2.0"/>
    <arg name="a0"          default="0.00"/> <!-- wrt to map-->

    <!-- Start map server -->
    <arg name="map" value="sml"/>
    <node name="map_server" pkg="map_server" type="map_server" args="$(find svea_core)/maps/$(arg map).yaml" output="screen"/>

    <!-- Start low-level interface -->
    <node name="serial_node" pkg="rosserial_python" type="serial_node.py">
        <param name="port" value="/dev/ttyACM0"/>
        <param name="baud" value="250000"/>
    </node>
    
    <!-- Start localization -->
    <include if="$(eval location == 'kip')" file="$(find svea_sensors)/launch/localize.launch">
        <arg name="is_indoors"    value="false" />
        <arg name="initial_pose_x" value="$(arg x0)" />
        <arg name="initial_pose_y" value="$(arg y0)" />
        <arg name="initial_pose_a" value="$(arg a0)" />
    </include>

    <!-- Motion Capture System -->
    <group if="$(eval location == 'sml')">
        <arg name="mocap_address" value="10.0.0.10"/>
        <arg name="mocap_name"    value="$(arg name)"/>

        <include file="$(find mocap_qualisys)/launch/qualisys.launch">
            <arg name="server_address" value="$(arg mocap_address)"/>
        </include>

        <include file="$(find svea_mocap)/launch/map_correction.launch">
            <arg name="map" value="$(arg map)"/>
        </include>

        <!-- Static Transforms-->
        <include file="$(find svea_sensors)/launch/transforms.launch"/>
        <node name="tf_lidar_to_base_link" pkg="tf" type="static_transform_publisher" args="0 0 -0.2 0 0 0 $(arg name) base_link 100" />
        <node name="tf_odom_to_base_link" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base_link odom 100" />
    </group>
    
    <!-- Start NATS -->
    <node if="$(arg nats)" name="nats_connector" pkg="nats_ros_connector" type="nats_connector.py" output="screen">
        <remap to="vis_pose" from="vehicle/pose"/>
        <remap to="path" from="vehicle/path"/>
        <rosparam subst_value="true">
        host: sml-wan.asuscomm.com
        subscribers:
          - joy
        publishers:
          - vehicle/path
          - vehicle/pose
        service_proxies:
          - ltms/refine_path
        </rosparam>
    </node>

    <!-- Start pure_pursuit -->
    <node name="vehicle" pkg="aug_demo" type="vehicle2.py" output="screen">
        <rosparam subst_value="true">
        name: $(arg name)
        state: [$(arg x0) $(arg y0) $(arg a0)]
        location: $(arg location)
        </rosparam>
    </node>

</launch>
